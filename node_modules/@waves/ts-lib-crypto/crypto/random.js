"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
// @ts-ignore
var random_1 = __importDefault(require("node-forge/lib/random"));
var seed_words_list_1 = require("./seed-words-list");
var string_bytes_1 = require("../conversions/string-bytes");
var _random = function (count) { return string_bytes_1.stringToBytes(random_1.default.getBytesSync(count), 'raw'); };
var ensureBuffer = function () {
    try {
        var b = new Buffer(1);
    }
    catch (e) {
        throw new Error('Buffer not supported in this environment. Use Node.js or Browserify for browser support.');
    }
};
exports.random = function (count, type) {
    switch (type) {
        case 'Array8':
            return Array.from(_random(count));
        case 'Array16':
            return Array.from(exports.random(count, 'Uint16Array'));
        case 'Array32':
            return Array.from(exports.random(count, 'Uint32Array'));
        case 'Buffer':
            ensureBuffer();
            return Buffer.from(_random(count));
        case 'Uint8Array':
            return _random(count);
        case 'Uint16Array':
            return new Uint16Array(count)
                .map(function (_) { return _random(2).reduce(function (a, b, i) { return a | b << 8 * (1 - i); }, 0); });
        case 'Uint32Array':
            return new Uint32Array(count)
                .map(function (_) { return _random(4).reduce(function (a, b, i) { return a | b << 8 * (1 - i); }, 0); });
        default:
            throw new Error(type + ' is unsupported.');
    }
};
exports.randomBytes = function (length) {
    return exports.random(length, 'Uint8Array');
};
exports.randomSeed = function (wordsCount) {
    if (wordsCount === void 0) { wordsCount = 15; }
    return exports.random(wordsCount, 'Array32')
        .map(function (x) { return seed_words_list_1.seedWordsList[x % seed_words_list_1.seedWordsList.length]; })
        .join(' ');
};
//# sourceMappingURL=random.js.map