import * as BigNum from '@liskhq/bignum';
export declare const validatePublicKey: (publicKey: string) => boolean;
export declare const isNullByteIncluded: (input: string) => boolean;
export declare const validateUsername: (username: string) => boolean;
export declare const validateSignature: (signature: string) => boolean;
export declare const checkPublicKeysForDuplicates: (publicKeys: ReadonlyArray<string>) => boolean;
export declare const stringEndsWith: (target: string, suffixes: ReadonlyArray<string>) => boolean;
export declare const validatePublicKeys: (publicKeys: ReadonlyArray<string>) => boolean;
export declare const validateKeysgroup: (keysgroup: ReadonlyArray<string>) => boolean;
export declare const validateAddress: (address: string) => boolean;
export declare const isGreaterThanZero: (amount: BigNum) => boolean;
export declare const isGreaterThanOrEqualToZero: (amount: BigNum) => boolean;
export declare const isGreaterThanMaxTransactionAmount: (amount: BigNum) => boolean;
export declare const isGreaterThanMaxTransactionId: (id: BigNum) => boolean;
export declare const isNumberString: (str: string) => boolean;
export declare const validateNonTransferAmount: (data: string) => boolean;
export declare const validateTransferAmount: (data: string) => boolean;
export declare const isValidTransferData: (data: string) => boolean;
export declare const validateFee: (data: string) => boolean;
export declare const isValidInteger: (num: unknown) => boolean;
export declare const isUnique: (values: ReadonlyArray<string>) => boolean;
export declare const isValidNumber: (num: unknown) => boolean;
